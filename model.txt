/media/ava/Data_CI/workspace/shabari/miniconda3/envs/lss/lib/python3.10/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/media/ava/Data_CI/workspace/shabari/miniconda3/envs/lss/lib/python3.10/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.
  warnings.warn(msg)
NuscData: 323 samples. Split: train.
                   Augmentation Conf: {'resize_lim': (0.193, 0.225), 'final_dim': (128, 352), 'rot_lim': (-5.4, 5.4), 'H': 900, 'W': 1600, 'rand_flip': True, 'bot_pct_lim': (0.0, 0.22), 'cams': ['CAM_FRONT_LEFT', 'CAM_FRONT', 'CAM_FRONT_RIGHT', 'CAM_BACK_LEFT', 'CAM_BACK', 'CAM_BACK_RIGHT'], 'Ncams': 6}
NuscData: 81 samples. Split: val.
                   Augmentation Conf: {'resize_lim': (0.193, 0.225), 'final_dim': (128, 352), 'rot_lim': (-5.4, 5.4), 'H': 900, 'W': 1600, 'rand_flip': True, 'bot_pct_lim': (0.0, 0.22), 'cams': ['CAM_FRONT_LEFT', 'CAM_FRONT', 'CAM_FRONT_RIGHT', 'CAM_BACK_LEFT', 'CAM_BACK', 'CAM_BACK_RIGHT'], 'Ncams': 6}
Loaded pretrained weights for efficientnet-b0
loading model.pt
running eval...
  0%|          | 0/81 [00:00<?, ?it/s]/media/ava/Data_CI/workspace/shabari/lss_model/lift-splat-shoot/src/onnx_export.py:84: UserWarning: Using a target size (torch.Size([1, 1, 1, 200, 200])) that is different to the input size (torch.Size([1, 1, 200, 200])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  mse = F.mse_loss(t1, t2)
  0%|          | 0/81 [00:01<?, ?it/s]
[torch.Size([1, 6, 3, 128, 352]), torch.Size([1, 6, 3, 3]), torch.Size([1, 6, 3]), torch.Size([1, 6, 3, 3]), torch.Size([1, 6, 3, 3]), torch.Size([1, 6, 3]), torch.Size([1, 1, 200, 200])]
Geom Feat torch.Size([43296, 4])
Pytorch Prediction Shape torch.Size([1, 1, 200, 200])
ONNX Inference
[(1, 6, 3, 128, 352), (1, 6, 3, 3), (1, 6, 3), (1, 6, 3, 3), (1, 6, 3, 3), (1, 6, 3)]
(1, 1, 1, 200, 200)
2.9313877991654635e-09
